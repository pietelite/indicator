plugins {
    id 'org.cadixdev.licenser' version '0.6.1' apply false
}

defaultTasks 'updateLicensesMain', 'build'

static def suffix(String apiVersion) {
    def journeyEnv = System.getenv('JOURNEY_ENV')
    int commitsSinceMajorVersion
    def tagInfo = 'git describe --tags'.execute().text.trim()
    if (!tagInfo.contains('-')) {
        commitsSinceMajorVersion = 0
    } else {
        commitsSinceMajorVersion = Integer.parseInt((String) tagInfo.split("-")[1])
    }
    if (journeyEnv != null && journeyEnv == 'PROD') {
        // Production build
        return '.' + commitsSinceMajorVersion
    } else {
        // Non-production
        StringBuilder builder = new StringBuilder()
        if (tagInfo.startsWith(apiVersion)) {
            // We are working on the current major/minor version
            String numberOfDevCommits = 'git rev-list HEAD --not origin/main --count'.execute().text.trim()
            if (!numberOfDevCommits.isEmpty()) {
                // subtract dev commit count so we get accurate version from main branch
                commitsSinceMajorVersion -= Integer.parseInt(numberOfDevCommits)
            }
            builder.append('.').append(commitsSinceMajorVersion)
        } else {
            // We are working on a newer version, so there are no patch commits
            builder.append('.0')
        }
        builder.append('-')
        builder.append('dev')
        builder.append('-').append((String) 'git rev-parse --short HEAD'.execute().text.trim())
        return builder.toString()
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'org.cadixdev.licenser'

    project.ext.publish = false
    project.ext.snapshot = true

    project.ext.majorVersion = '1'
    project.ext.minorVersion = '1'

    project.ext.snapshotVersion = project.ext.snapshot ? "-SNAPSHOT" : ""
    project.ext.apiVersion = project.ext.majorVersion + '.' + project.ext.minorVersion
    project.ext.apiFullVersion = project.ext.apiVersion + project.ext.snapshotVersion
    project.ext.fullVersion = project.ext.apiVersion + suffix(project.ext.apiVersion)
    version = project.ext.fullVersion
    group = 'net.whimxiqal.journey'

    sourceCompatibility = 16
    targetCompatibility = 16

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    jar {
        from '../LICENSE.txt'
    }

    license {
        ignoreFailures = true
        header = rootProject.file('LICENSE.txt')
        include '**/*.java'
        newLine = true
    }

    repositories {
        mavenCentral()
        maven {
            name = 'sonatype-snapshots'
            url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
        }
    }

    test {
        useJUnitPlatform()
    }
}